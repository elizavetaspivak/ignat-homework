{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Junior","Message","props","className","s","message","src","avatar","text","name","content","time","HW1","messageData","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","someClass","buttonBlock","filter","buttonClick","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","t","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","errorInput","input","greeting","value","onChange","onKeyPress","add","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimed","currentTarget","trim","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","PreJunior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","link","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,YAAc,6BAA6B,OAAS,wBAAwB,YAAc,+B,iBCAnJD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,MAAQ,wBAAwB,WAAa,6BAA6B,MAAQ,wBAAwB,IAAM,wB,kBCAxMD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,wB,gBCAzJD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,wB,kBCAtFD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,iBCA1HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,2B,kBCAzFD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,2BAA2B,MAAQ,qB,gBCA3HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,qBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,qJCWTC,MAVf,WACI,OACI,gCACI,sCACA,kDACA,uFCOGC,MARf,WACI,OACI,0C,iBCgBOC,MAbf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,qBAAKC,IAAKJ,EAAMK,SAChB,sBAAKJ,UAAWC,IAAEI,KAAlB,UACI,mBAAGL,UAAWC,IAAEK,KAAhB,SAAsB,4BAAIP,EAAMO,SAChC,mBAAGN,UAAWC,IAAEM,QAAhB,SAA0BR,EAAMG,UAChC,mBAAGF,UAAWC,IAAEO,KAAhB,SAAuBT,EAAMS,cCY9BC,MA3Bf,WACI,IAAMC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QAGV,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CAASN,OAAQM,EAAoBJ,KAAMI,EAAkBR,QAASQ,EAC7DF,KAAME,IAGf,uBAGA,2B,wBCFGC,MAbf,SAAgBZ,GAGZ,OACI,sBAAKC,UAAWC,IAAEW,OAAlB,UACI,qBAAKZ,UAAWC,IAAEK,KAAlB,SAAyBP,EAAMa,OAAON,OACtC,qBAAKN,UAAWC,IAAEY,SAAlB,SAA6Bd,EAAMa,OAAOC,WAE1C,wBAAQC,QAPO,WAAQf,EAAMgB,qBAAqBhB,EAAMa,OAAOI,MAO/D,mB,gBCgCGC,MAtCf,SAAiBlB,GACb,IAAMmB,EAAgBnB,EAAMoB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIT,OAAQS,EACRN,qBAAsBhB,EAAMgB,sBAFvBM,EAAEL,QAmBf,OACI,sBAAKhB,UAAWC,IAAEqB,UAAlB,UAEKJ,EAED,sBAAKlB,UAAWC,IAAEsB,YAAlB,UACI,wBAAQvB,UAA4B,QAAjBD,EAAMyB,OAAmBvB,IAAEwB,YAAcxB,IAAEyB,OAAQZ,QAnBnE,WACXf,EAAM4B,UAAU,QAkBR,iBACA,wBAAQ3B,UAA4B,SAAjBD,EAAMyB,OAAoBvB,IAAEwB,YAAcxB,IAAEyB,OAAQZ,QAjBnE,WACZf,EAAM4B,UAAU,SAgBR,kBACA,wBAAQ3B,UAA4B,WAAjBD,EAAMyB,OAAsBvB,IAAEwB,YAAcxB,IAAEyB,OAAQZ,QAfnE,WACdf,EAAM4B,UAAU,WAcR,oBAEA,wBAAQ3B,UAA4B,QAAjBD,EAAMyB,OAAmBvB,IAAEwB,YAAcxB,IAAEyB,OAAQZ,QAdnE,WACXf,EAAM4B,UAAU,QAaR,wBC/BVC,EAAoC,CACtC,CAACZ,IAAK,EAAGV,KAAM,QAASO,SAAU,QAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,OAAQO,SAAU,QACjC,CAACG,IAAK,EAAGV,KAAM,aAAcO,SAAU,WA0C5BgB,MA5Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJN,EAFI,KAEIG,EAFJ,KAILM,EAdmB,SAACF,EAA4BP,GACtD,MAAe,SAAXA,EAA0BO,EAAQP,QAAO,SAACH,GAAD,MAAgC,QAAdA,EAAER,YAClD,QAAXW,EAAyBO,EAAQP,QAAO,SAACH,GAAD,MAAgC,OAAdA,EAAER,YACjD,WAAXW,EAA4BO,EAAQP,QAAO,SAACH,GAAD,MAAgC,UAAdA,EAAER,YACvDkB,EAUYG,CAAcH,EAASP,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIA,OAAQA,EACRL,KAAMc,EACNN,UAAWA,EACXZ,qBAZiB,SAACC,GAAD,OAAiBgB,EATtB,SAACD,EAA4Bf,GACrD,OAAOe,EAAQP,QAAO,SAACW,GAAD,OAAkBA,EAAEnB,MAAQA,KAQOoB,CAAaL,EAASf,OAevE,uBAGA,2B,wBCpBGqB,EAtB+B,SAAC,GAEzC,IADD/B,EACA,EADAA,KAAMgC,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,QAE9CC,EAAaH,EAAQvC,IAAE2C,WAAa3C,IAAE4C,MAE5C,OACI,sBAAK7C,UAAWC,IAAE6C,SAAlB,UACI,gCACA,uBACIC,MAAOzC,EACP0C,SAAUV,EACVtC,UAAW2C,EACXM,WAAYP,IAET,qBAAK1C,UAAWC,IAAEuC,MAAlB,SAA0BA,OAEjC,wBAAQxC,UAAWC,IAAEiD,IAAKC,WAAUX,EAAsB1B,QAASyB,EAAnE,iBACA,qBAAKvC,UAAWC,IAAEmD,MAAlB,SAA0BX,QC2BvBY,EA3CiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEzB,mBAAiB,IADiD,mBACnFxB,EADmF,KAC7EkD,EAD6E,OAEhE1B,mBAAiB,IAF+C,mBAEnFU,EAFmF,KAE5EiB,EAF4E,KAgBpFlB,EAAU,WACZgB,EAAgBjD,GAChBoD,MAAM,UAAD,OAAWpD,EAAX,MACLkD,EAAQ,KAUNf,EAAaa,EAAMK,OAEzB,OACI,cAAC,EAAD,CACIrD,KAAMA,EACNgC,gBA9BgB,SAACsB,GACrB,IAAMC,EAASD,EAAEE,cAAcf,MAAMgB,OAElCF,GACCL,EAAQK,GACRJ,EAAS,MAETD,EAAQ,IACRC,EAAS,qBAuBTlB,QAASA,EACTC,MAAOA,EACPC,WAAYA,EACZC,QAhBQ,SAACkB,GACA,UAAVA,EAAEI,KAAmB1D,IACpBiC,IACAiB,EAAQ,S,QCDLS,MA3Bf,WAAgB,IAAD,EACenC,mBAA0B,IADzC,mBACJwB,EADI,KACGY,EADH,KAWX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBZ,MAAOA,EAAOC,gBAdjB,SAACjD,GACtB,IAAM6D,EAAO,CACTnD,IAAKoD,cACL9D,QAEH4D,EAAS,GAAD,mBAAKZ,GAAL,CAAYa,QAWhB,uBAGA,2B,gCCyBGE,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEtB,EAOH,EAPGA,SAAUuB,EAOb,EAPaA,aACVtB,EAMH,EANGA,WAAYP,EAMf,EANeA,QACZF,EAKH,EALGA,MACAxC,EAIH,EAJGA,UAAWwE,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMzE,IAAEuC,MAAR,YAAiBgC,GAAgC,IACnEG,EAAmB,UAAM1E,IAAE4C,MAAR,YAAiBL,EAAQvC,IAAE2C,WAAa3C,IAAE2E,WAA1C,YAAwD5E,GAEjF,OACI,qCACI,mCACIsE,KAAM,OACNtB,SArBa,SAACY,GACtBZ,GACGA,EAASY,GAEZW,GAAgBA,EAAaX,EAAEE,cAAcf,QAkBrCE,WAhBe,SAACW,GACxBX,GAAcA,EAAWW,GAEzBlB,GACa,UAAVkB,EAAEI,KACFtB,KAYK1C,UAAW2E,GAEPF,IAEPjC,GAAS,sBAAMxC,UAAW0E,EAAjB,SAAsClC,Q,kCC3B7CqC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK9E,EAGR,EAHQA,UACFyE,EAEN,mCACKM,EAAc,UAAMD,EAAM7E,IAAE6E,IAAM7E,IAAE+E,QAAtB,YAAiChF,GAErD,OACI,oCACIA,UAAW+E,GACPN,K,iBCuBDQ,EAjCyC,SAAC,GASpD,EAPGX,KAOF,IANEtB,EAMH,EANGA,SAAUkC,EAMb,EANaA,gBACVlF,EAKH,EALGA,UACAmF,GAIH,EALcX,cAKd,EAJGW,UAEGV,EAEN,4FAQKE,EAAmB,UAAM1E,IAAEmF,SAAR,YAAoBpF,GAAwB,IAErE,OACI,kCACI,mCACIsE,KAAM,WACNtB,SAba,SAACY,GACtBZ,GAAYA,EAASY,GAErBsB,GAAmBA,EAAgBtB,EAAEE,cAAcuB,UAW3CrF,UAAW2E,GAEPF,IAEPU,GAAY,sBAAMnF,UAAWC,IAAEuE,cAAnB,SAAmCW,QCwC7CG,MAzEf,WAAgB,IAAD,EACaxD,mBAAiB,IAD9B,mBACJzB,EADI,KACEkF,EADF,KAEL/C,EAAQnC,EAAO,GAAK,QAEpBmF,EAAY,WACVhD,EACAkB,MAAM,gFAENA,MAAMrD,IARH,EAYmByB,oBAAkB,GAZrC,mBAYJuD,EAZI,KAYKI,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKzF,UAAWC,IAAEyF,OAAlB,UACI,cAAC,EAAD,CACI3C,MAAO1C,EACPkE,aAAcgB,EACd7C,QAAS8C,EACThD,MAAOA,IAIX,cAAC,EAAD,CACIxC,UAAWC,IAAE0F,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIb,KAAG,EACHhE,QAAS0E,EAFb,qBAOA,cAAC,EAAD,CAAarC,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIkC,QAASA,EACTH,gBAAiBO,EAFrB,wBAQA,cAAC,EAAD,CAAeJ,QAASA,EAASrC,SA/CxB,SAACY,GAAD,OAAsC6B,EAAW7B,EAAEE,cAAcuB,eAkD9E,uBAKA,2BCvDGO,MAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCEGC,MARf,WACI,OACI,4CCDKC,EACG,cADHA,EAED,UAFCA,EAGI,eA2BFC,MAvBf,WACI,OACI,8BAEI,eAAC,IAAD,WAII,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAIL,OAEpD,cAAC,IAAD,CAAOE,KAAMF,EAAiBI,OAAQ,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAOF,KAAMF,EAAaI,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMF,EAAkBI,OAAQ,kBAAM,cAAC,EAAD,OARjD,gBAYI,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,a,oBCdtBE,OAXf,WACI,OACI,sBAAKpG,UAAWC,KAAEoG,OAAlB,UACI,cAAC,IAAD,CAASrG,UAAWC,KAAEqG,KAAMH,GAAIL,EAAhC,wBACA,cAAC,IAAD,CAAS9F,UAAWC,KAAEqG,KAAMH,GAAIL,EAAhC,oBACA,cAAC,IAAD,CAAS9F,UAAWC,KAAEqG,KAAMH,GAAIL,EAAhC,sBACA,qBAAK9F,UAAWC,KAAEsG,YCSfC,OAff,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,GAAD,IAEA,cAAC,EAAD,UCSGC,OAdf,WACI,OACI,sBAAKzG,UAAWC,IAAEwG,IAAlB,UACI,mDAKA,cAAC,GAAD,QCJQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCXRC,IAASb,OACL,eAAC,IAAMc,WAAP,WACI,cAAC,GAAD,IACA,cAAC,EAAD,OAEJC,SAASC,eAAe,SD+HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAjF,GACHkF,QAAQlF,MAAMA,EAAMtC,c","file":"static/js/main.ce4bb018.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__l4fwN\",\"buttonBlock\":\"Affairs_buttonBlock__n76Ka\",\"button\":\"Affairs_button__3YaQm\",\"buttonClick\":\"Affairs_buttonClick__13Pi8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__21ydZ\",\"error\":\"Greeting_error__1uvQ8\",\"input\":\"Greeting_input__2kXLu\",\"errorInput\":\"Greeting_errorInput__2Khas\",\"count\":\"Greeting_count__2ZvGI\",\"add\":\"Greeting_add__2r_VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"name\":\"Message_name__Tzmp0\",\"content\":\"Message_content__Ltxgc\",\"time\":\"Message_time__HOFTG\",\"text\":\"Message_text__2fXBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__1oUIl\",\"header\":\"Header_header__1amup\",\"block\":\"Header_block__3dX0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__3skNw\",\"name\":\"Affair_name__wrv2c\",\"priority\":\"Affair_priority__1jVve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\",\"input\":\"HW4_input__2DViA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction Junior() {\n    return (\n        <div>\n            Junior\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {resolveSrv} from \"dns\";\nimport s from './Message.module.css'\n\nexport type MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.message}>\n            <img src={props.avatar}/>\n            <div className={s.text}>\n                <p className={s.name}><b>{props.name}</b></p>\n                <p className={s.content}>{props.message}</p>\n                <p className={s.time}>{props.time}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nfunction HW1() {\n    const messageData = {\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n        name: 'Some Name',\n        message: 'some text',\n        time: '22:00',\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message avatar={messageData.avatar} name={messageData.name} message={messageData.message}\n                     time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2';\nimport s from './Affair.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div className={s.affair}>\n            <div className={s.name}>{props.affair.name}</div>\n            <div className={s.priority}>{props.affair.priority}</div>\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    filter: FilterType\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div className={s.someClass}>\n\n            {mappedAffairs}\n\n            <div className={s.buttonBlock}>\n                <button className={props.filter === 'all' ? s.buttonClick : s.button} onClick={setAll}>All</button>\n                <button className={props.filter === 'high' ? s.buttonClick : s.button} onClick={setHigh}>High</button>\n                <button className={props.filter === 'middle' ? s.buttonClick : s.button} onClick={setMiddle}>Middle\n                </button>\n                <button className={props.filter === 'low' ? s.buttonClick : s.button} onClick={setLow}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'high') return affairs.filter((a:AffairType) => a.priority == 'high')\n    if (filter === 'low') return affairs.filter((a:AffairType) => a.priority == 'low')\n    if (filter === 'middle') return affairs.filter((a:AffairType) => a.priority == 'middle')\n    else return affairs// need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter((t:AffairType) => t._id !== _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                filter={filter}\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n            <div>\n            <input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n                onKeyPress={onEnter}\n            />\n                   <div className={s.error}>{error}</div>\n            </div>\n            <button className={s.add} disabled={error ? true : false} onClick={addUser}>add</button>\n            <div className={s.count}>{totalUsers}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimed = e.currentTarget.value.trim()\n\n        if(trimed){\n            setName(trimed)\n            setError('')\n        }else{\n            setName('')\n            setError('Name is require')\n        }\n         // need to fix\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello  ${name}!`) // need to fix\n        setName('')\n    }\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if(e.key === 'Enter' && name){\n            addUser()\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n       const user = {\n           _id: v1(),\n           name\n       }\n        setUsers([...users, user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n"," import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n           Junior +\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Error404 from './pages/Error404';\nimport Junior from './pages/Junior';\nimport PreJunior from './pages/PreJunior';\nimport JuniorPlus from './pages/JuniorPlus';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PlUS: '/junior-plus'\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PlUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {PATH} from './Routes'\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <NavLink className={s.link} to={PATH.PRE_JUNIOR}>pre junior</NavLink>\n            <NavLink className={s.link} to={PATH.JUNIOR}>junior</NavLink>\n            <NavLink className={s.link} to={PATH.JUNIOR_PlUS}>junior +</NavLink>\n            <div className={s.block}></div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from 'react-router-dom';\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport HW1 from \"./p2-homeworks/h1/HW1\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n        <HW1 />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}